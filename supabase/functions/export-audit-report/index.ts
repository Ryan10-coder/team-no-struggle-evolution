import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { summary, monthlyData, generatedBy, generatedAt } = await req.json();

    // Create detailed audit report in CSV format
    const csvContent = [
      '"TNS AUDIT REPORT"',
      `"Generated By: ${generatedBy}"`,
      `"Generated On: ${new Date(generatedAt).toLocaleString()}"`,
      '',
      '"FINANCIAL SUMMARY"',
      '"Metric","Amount"',
      `"Total Members","${summary.totalMembers}"`,
      `"Total Contributions","${summary.totalContributions}"`,
      `"Total Disbursements","${summary.totalDisbursements}"`,
      `"Monthly Expenses","${summary.monthlyExpenses}"`,
      `"Net Position","${summary.netPosition}"`,
      '',
      '"MONTHLY TRENDS"',
      '"Month","Members","Contributions","Disbursements","Expenses","Net Position"',
      ...monthlyData.map((data: any) => {
        const net = data.contributions - data.disbursements - data.expenses;
        return `"${data.month}","${data.members}","${data.contributions}","${data.disbursements}","${data.expenses}","${net}"`;
      }),
      '',
      '"AUDIT NOTES"',
      '"- This report provides a comprehensive overview of TNS financial position"',
      '"- All amounts are in Kenya Shillings (KES)"',
      '"- Data includes all approved members and verified transactions"',
      '"- Negative net position indicates deficit requiring attention"',
      '"- Monthly trends help identify seasonal patterns and growth"',
      '',
      '"END OF REPORT"'
    ].join('\n');

    return new Response(csvContent, {
      headers: {
        ...corsHeaders,
        'Content-Type': 'text/csv',
        'Content-Disposition': `attachment; filename="TNS_Audit_Report_${new Date().toISOString().split('T')[0]}.csv"`
      }
    });

  } catch (error) {
    console.error('Error generating audit report:', error);
    return new Response(
      JSON.stringify({ error: 'Failed to generate audit report' }),
      { 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' }, 
        status: 500 
      }
    );
  }
});